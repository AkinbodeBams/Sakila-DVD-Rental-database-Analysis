(1) First Query
-- This query calculates the difference in the time it takes for customers to
return rented dvds , it then groups them to
-- 		(i)customers who return thier dvd with the alloted "return day" as ""On- time Customers""
-- 		(ii)customers who spent more than the alloted time as ""Runaways""
-- 		(iii)customers who never returned rented dvds as ""Late returners""

with t1 as (SELECT concat(c.first_name,

										' ',
										c.last_name) customer_name,
			COUNT(r) num_of_order,
			r.rental_date rental_date,
			r.return_date return_date,
			DATE_PART('day',

				r.return_date - r.rental_date) AS date_difference,
			f.rental_duration rental_duration
		FROM customer c
		JOIN rental r ON r.customer_id = c.customer_id
		JOIN inventory i on i.inventory_id = r.inventory_id
		JOIN film f on f.film_id = i.film_id
		GROUP BY 1,3,
			4,5,
			6) ,
	t2 AS
	(SELECT customer_name,
			return_date,
			(CASE
								WHEN date_difference > rental_duration THEN 'Late returners'
								WHEN return_date ISNULL THEN 'Runaways'
								ELSE 'On- time Customers'
				END) customer_category,
			date_difference
		FROM t1
		ORDER BY 4 DESC),
	t3 AS
	(SELECT customer_category,
			COUNT(t2) customer_count
		FROM t2
		GROUP BY 1)
SELECT customer_category,
	customer_count,
	ROUND(customer_count::float / (SUM(customer_count) OVER()) * 100) AS percentage
FROM t3;



(2) Second query

This query returns the total number of orders made across all viewing ratings


SELECT f.rating ratings,
	COUNT(r) order_counts
FROM rental r
JOIN inventory i ON i.inventory_id = r.inventory_id
JOIN film f ON f.film_id = i.film_id
WHERE DATE_PART('year',

							r.rental_date) = 2005
GROUP BY 1
ORDER BY 2 DESC;
